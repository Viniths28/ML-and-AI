# -*- coding: utf-8 -*-
"""Untitled21.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hlRQEc_BIvOrD29BI4dgRTg6inVu_Sbq
"""

import tensorflow as tf

model = tf.keras.models.load_model('my_model1.hdf5')

import streamlit as st


st.write("""
         # Garbage Classification Prediction
         """
         )


st.write("This is a simple image classification web app to predict Garbage Labels")

file = st.file_uploader("Please upload an image file", type=["jpg", "png"])

import cv2
from PIL import Image, ImageOps
import numpy as np


def import_and_predict(image_data, model):
  size = (300,300)    
  #image = ImageOps.fit(image_data, size, Image.ANTIALIAS)
  image1 = np.asarray(image_data)
  #img2 = cv2.cvtColor(image1, cv2.COLOR_BGR2RGB)
  img_resize = (cv2.resize(image1, dsize=(300, 300),    interpolation=cv2.INTER_CUBIC))/255.
  img_reshape = img_resize[np.newaxis,...]
  prediction = model.predict(img_reshape)
        
  return prediction
  
  
if file is None:
    st.text("Please upload an image file")
else:
    image = Image.open(file)
    st.image(image, use_column_width=True)
    prediction = import_and_predict(image, model)
    
    if np.argmax(prediction) == 0:
        st.write("It is a cardboard!")
    elif np.argmax(prediction) == 1:
        st.write("It is a glass!")
    elif np.argmax(prediction) == 2:
        st.write("It is a metal!")
    elif np.argmax(prediction) == 3:
        st.write("It is a paper!")
    elif np.argmax(prediction) == 4:
        st.write("It is a plastic!")
    else:
        st.write("It is a trash!")
    
    st.text("Probability (0: cardboard, 1: glass, 2: metal, 3: paper, 4: plastic, 5: trash")
    st.write(prediction)